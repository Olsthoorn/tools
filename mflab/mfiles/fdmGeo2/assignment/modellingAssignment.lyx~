#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass report
\begin_preamble
% Any characters can be typed directly from the keyboard, eg éçñ
% provide lots of new symbols
% Add graphics capabilities
%\usepackage{epstopdf} % to include .eps graphics files with pdfLaTeX
\usepackage{flafter}% Don't place floats before their definition
%\usepackage{topcapt}   % Define \topcation for placing captions above tables (not in gwTeX)
%\usepackage{natbib} % use author/date bibliographic citations
\@ifundefined{definecolor}
 {\usepackage{color}}{}
% necessary to use colos
% Better maths support & more symbols
\usepackage{bm}% Define \bm{} to use bold math fonts
\usepackage[pdftex,bookmarks,colorlinks,breaklinks]{hyperref}% PDF hyperlinks, with coloured links
\definecolor{dullmagenta}{rgb}{0.4,0,0.4}% #660066
\definecolor{darkblue}{rgb}{0,0,0.4}\hypersetup{linkcolor=red,citecolor=blue,filecolor=dullmagenta,urlcolor=darkblue}% coloured links
%\hypersetup{linkcolor=black,citecolor=black,filecolor=black,urlcolor=black} % black links, for printed output
\usepackage{memhfixc}% remove conflict between the memoir class & hyperref
% \usepackage[activate]{pdfcprot}  % Turn on margin kerning (not in gwTeX)
\usepackage{pdfsync}% enable tex source and pdf output syncronicity
\usepackage{hyperref}

\usepackage{alltt}
\usepackage{color}
\definecolor{string}{rgb}{0.7,0.0,0.0}
\definecolor{comment}{rgb}{0.13,0.54,0.13}
\definecolor{keyword}{rgb}{0.0,0.0,1.0}

\usepackage{listings}
\definecolor{mygreen}{RGB}{28,172,0} % color values Red, Green, Blue
\definecolor{mylilas}{RGB}{170,55,241}


\newtheorem{issue}{Issue}

\lstset{language=Matlab,%
    %basicstyle=\color{red},
    breaklines=true,%
    morekeywords={matlab2tikz},
    keywordstyle=\color{blue},%
    morekeywords=[2]{1}, keywordstyle=[2]{\color{black}},
    identifierstyle=\color{black},%
    stringstyle=\color{mylilas},
    commentstyle=\color{mygreen},%
    showstringspaces=false,%without this there will be a symbol in the places where there is a space
    numbers=left,%
    numberstyle={\tiny \color{black}},% size of the numbers
    numbersep=9pt, % this defines how far the numbers are from the text
    emph=[1]{for,end,break},emphstyle=[1]\color{red}, %some words to emphasise
    %emph=[2]{word1,word2}, emphstyle=[2]{style},    
}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine natbib_authoryear
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Modeling Assignment
\begin_inset Newline newline
\end_inset

CIE5440, Geohydrology 2
\end_layout

\begin_layout Author
T.N.Olsthoorn
\end_layout

\begin_layout Date
May 21, 2014
\end_layout

\begin_layout Section*
Intro
\end_layout

\begin_layout Standard
Objectives
\end_layout

\begin_layout Section*
Assignment
\end_layout

\begin_layout Section*
Implementation
\end_layout

\begin_layout Standard
The info that comes with this course consists of a set of directories one
 of which is 
\begin_inset Quotes eld
\end_inset


\emph on
functions
\emph default

\begin_inset Quotes erd
\end_inset

.
 To use thees functions you have to add that directory to the Matlab search
 path.
 There is a function called 
\emph on
addpath
\emph default
 which adds directories to the Matlab's search path.
 Of combined with the function pwd (print working directory) this becomes
 easy:
\end_layout

\begin_layout Standard
Navigate to the directory 
\begin_inset Quotes eld
\end_inset


\emph on
functions
\emph default

\begin_inset Quotes erd
\end_inset

 pertaining to this course.
\end_layout

\begin_layout Standard
Then type the command (in the Matlab command window of course)
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

addpath(pwd)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Then navigate to the directory scripts which is from where or in which we
 do the exercises for this course.
 You can also make your own directory and call it for instance 
\begin_inset Quotes eld
\end_inset


\emph on
myScripts
\emph default

\begin_inset Quotes erd
\end_inset

 and work from there to separate your own work form the files that are supplied
 with this course.
 Clearly you can also make your own function directory and add that to the
 Matlab search path as well.
 Same procedure as before.
 If you type
\end_layout

\begin_layout Standard
path
\end_layout

\begin_layout Standard
Matlab shows the entire search path.
 You will notice then that the directory you added last is on top.
 Therefore, the functions defined there will be found.
 Only if not found will Matlab continue to look further.
 Which function Matlab will actually use can be seen by typing for instance
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

which fdm2
\end_layout

\end_inset


\end_layout

\begin_layout Standard
to see if 
\emph on
fdm2
\emph default
 exists and where Matlab found it and will use if it does exist.
\end_layout

\begin_layout Subsection*
Implement the 
\emph on
fdm2
\emph default
 model
\end_layout

\begin_layout Standard
The fdm2 model and all other models used in this course require the 
\emph on
grid2DObj
\emph default
 which is supplied both in the syllabus and in the directory functions.
\end_layout

\begin_layout Standard
Implement the 
\emph on
fdm2
\emph default
 model (see syllabus in the directory 
\emph on
syllabi
\emph default
), you can use the one worked out in class.
 This model is a matlab function which implements the finite difference
 method for a single layer steady-state situation.
 It accepts input for its grid and yields the heads and flows.
\end_layout

\begin_layout Standard
This idea is that you do this yourself, so that you understand both the
 background theory and how its is implemented.
 Notice that you can and should inspect every detail of your code by selecting
 it and pressing F9 in Windows or pressing SHIFT F7 on the Mac.
 This helps enormously to understand the code.
 Use a very simple data set with a few cells only to prevent enormous numbers
 of values scrolling over the screen each time you check something.
\end_layout

\begin_layout Standard
Also learn to use the debugger and how to set break points, combined with
 single stepping.
 Notice the warnings and errors that the compiler helps you with in the
 right margin of the editor.
 Hover over them with your mouse to see the line to which the message applies
 and solve it.
 The small square to the top right of the editor window should be green.
\end_layout

\begin_layout Standard
When done implement o couple of exercises as shown in the syllabus to check
 if the model works correctly.
 In the end the only way to check its correctness is by comparing with a
 solution that you know, i.e.
 an analytic solution.
\end_layout

\begin_layout Standard
Also get the habit of logical indexing like
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Iact = IBOUND>0
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Notice the difference between 
\begin_inset Formula $IBOUND>0$
\end_inset

 and 
\begin_inset Formula $find(IBOUND>0)$
\end_inset

.
 The first gives a logical array of the size of 
\emph on
IBOUND
\emph default
 and the second gives the global (i.e.
 Matlab) indices of the elements in that array for which the condition is
 true.
 Logical indexing much more conceptually pleasing and also faster, but not
 possible if you really need the indices of grid cells for instance.
 To realize what global indices are you have to be aware how Matlab stores
 arrays, which is the order of the array elements you get wen you type 
\begin_inset Formula $IBOUND(:)$
\end_inset

.
 I.e.
 first dimension (
\begin_inset Formula $y$
\end_inset

) fist, then second(
\begin_inset Formula $x$
\end_inset

) then third (
\begin_inset Formula $z$
\end_inset

) end so on.
 So the global index of elements 
\begin_inset Formula $X(ix,iy,iz)$
\end_inset

 with
\begin_inset Formula $N_{y}$
\end_inset

 and 
\begin_inset Formula $N_{x}$
\end_inset

 and 
\begin_inset Formula $N_{z}$
\end_inset

 the size of the array is
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
Idx=N_{y}\times N_{x}\times\left(iz-1\right)+N_{y}\times\left(ix-1\right)+iy
\]

\end_inset


\end_layout

\begin_layout Standard
but you seldom or ever need to do this calculation your self.
 The function 
\emph on
find
\emph default
 will take care of that in practically all cases.
\end_layout

\begin_layout Standard
Look in the Matlab syllabus for basic operations whenever you are not sure
 or look on the internet.
 Matlab has a million or so users all over the world and so there is little
 in relation with Matlab that has not been discussed earlier on the Internet.
\end_layout

\begin_layout Section*
Check your model by implementing some of the examples of the syllabus
\end_layout

\begin_layout Standard
This will make sure you get the habit and that your model works correctly.
\end_layout

\begin_layout Itemize
Circular island (flat model) with recharge
\end_layout

\begin_layout Itemize
Island with arbitrary shape with internal lake and an inactive area (i.e.
 bedrock where the aquifer does not exist).
 You can digitize any area on the screen using 
\emph on
ginput()
\emph default
 or 
\emph on
rbline().

\emph default
 Remember to always type help function to learn about how it works and what
 it does.
 e.g.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

help ginput
\end_layout

\begin_layout Plain Layout

help rbline
\end_layout

\begin_layout Plain Layout

doc ginput % to get Matlab's html help, it's just a bit nicer
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Make a vertical (cross sectional model).
 In fact, the same model but put upside-down.
 This means interpret the 
\begin_inset Formula $y$
\end_inset

-coordinate as vertical.
 The rest is the same.
 You can use the example in the syllabus, for instance by modeling a cross
 section through a strip of land between two ditches and compering it with
 the analytical solution (see syllabus or derive yourself).
 You can use a single layer (i.e.
 one row) or many layers (many rows).
 If you use more than one row, you can play with their conductivities.
 In this way it is possible to simulate a laminate consisting of many aquifers
 interlaced with aquitards.
 Also with multiple layers, you can simulate as accurately as desired the
 the flow concentrating near small ditches at the top of a thick aquifer.
 We call this partially penetrating ditches (or wells for that matter).
 You just have to specify the head boundaries, by telling in which cells
 the heads should be fixed.
 To fix the heads in some rectangular area you may do something like this
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{alltt}
\end_layout

\begin_layout Plain Layout


\backslash
textcolor{comment}{% choose your own grid:}
\end_layout

\begin_layout Plain Layout

xGr = 
\backslash
textcolor{keyword}{
\backslash
underline{...}}
\end_layout

\begin_layout Plain Layout

yGr = 
\backslash
textcolor{keyword}{
\backslash
underline{...}}
\end_layout

\begin_layout Plain Layout

gr = gridObj(xGr,yGr);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

FIXHD  = -1;    
\backslash
textcolor{comment}{% used in IBOUND to tell which cells have a fixed head}
\end_layout

\begin_layout Plain Layout

ACTIVE =  1;    
\backslash
textcolor{comment}{% used in IBOUND to tell which cell need to be computed}
\end_layout

\begin_layout Plain Layout

hLeft  = 3.1;   
\backslash
textcolor{comment}{% fixed head in left ditch}
\end_layout

\begin_layout Plain Layout

hRight = 4.3;   
\backslash
textcolor{comment}{% fixed head in right ditch}
\end_layout

\begin_layout Plain Layout

rch    = 0.001; 
\backslash
textcolor{comment}{% recharge in m/d}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

IBOUND = gr.const(ACTIVE);
\end_layout

\begin_layout Plain Layout

IH     = gr.const( 0);  
\backslash
textcolor{comment}{% initial heads}
\end_layout

\begin_layout Plain Layout

FQ     = gr.const( 0);  
\backslash
textcolor{comment}{% fixed flows (injection positive);}
\end_layout

\begin_layout Plain Layout

kx     = gr.const(10);  
\backslash
textcolor{comment}{% horizontal conductivity}
\end_layout

\begin_layout Plain Layout

ky     = gr.const( 2);  
\backslash
textcolor{comment}{% vertical   conductivity}
\end_layout

\begin_layout Plain Layout

FQ     = gr.const( 0);  
\backslash
textcolor{comment}{% fixed cell flows (injections positive)}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
textcolor{comment}{% Specify where my fixed-head ditches are in the grid}
\end_layout

\begin_layout Plain Layout

myLeftDitch = gr.xm>-20 
\backslash
& gr.xm<-15 
\backslash
& gr.ym>-3 
\backslash
& gr.ym<+10;
\end_layout

\begin_layout Plain Layout

myRightDitch= gr.xm>+15 
\backslash
& gr.xm<+20 
\backslash
& gr.ym>-3 
\backslash
& gr.ym<+10;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
textcolor{comment}{% Tell IBOUND about these fixed head ditches}
\end_layout

\begin_layout Plain Layout

IBOUND(myLeftDitch | myRightDitch) = FIXHD
\end_layout

\begin_layout Plain Layout

contourLevels   = floor(min(Phi(:))):0.05:ceil(max(Phi(:)));
\end_layout

\begin_layout Plain Layout

nrOfStreamLines = 25;
\end_layout

\begin_layout Plain Layout

figure; hold on; xlabel(
\backslash
textcolor{string}{'x [m]'}); ylabel(
\backslash
textcolor{string}{'elevation [m]'}); title(
\backslash
textcolor{string}{'my ditches'});
\end_layout

\begin_layout Plain Layout

contourf(gr.xm,gr.ym,Phi,contourLevels);  
\backslash
textcolor{comment}{% show heads}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
textcolor{comment}{% in cross sections it is always nice and useful to also
 show the stream lines}
\end_layout

\begin_layout Plain Layout

contour (gr.xp,gr.yp,Psi,nrOfStreamLines,
\backslash
textcolor{string}{'w'});  
\backslash
textcolor{comment}{% show stream function}
\end_layout

\begin_layout Plain Layout


\backslash
end{alltt}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Add axially symmetric behavior to your model.
 This is done by adding code to compute the conductances in case the vertical
 cross section model is supposed to simulate an axially symmetric situation
 instead of a flat cross section.
 Hence a choice for one or the other must be made when running the model.
 This choice is based on the variable 
\emph on
AXIAL
\emph default
 stored in the 
\emph on
grid2DObj
\emph default
.
 It's default value is false, but it can be set to true when creating the
 
\emph on
grid2DObj
\emph default
 (true may even be left out)
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

gr = grid2DObj(xGr,yGr,'AXIAL',true);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
and later on
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

gr.AXIAL = true;
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Vertical (cross sectional) axially symmetric model.
 You can simulate flow in an axially symmetric circular island as before
 but now using an axially symmetric model with a single row from 
\begin_inset Formula $r=0$
\end_inset

 to 
\begin_inset Formula $r$
\end_inset

 equal to some value beyond the boundary of the island.
 Also compare with the analytic solution
\end_layout

\begin_layout Itemize
Then like before, simulate a well in an axially symmetric context.
 The only difference being to implement a well.
 This can be done by specifying the fixed flow for the first column (where
 
\begin_inset Formula $r=0$
\end_inset

..
\begin_inset Formula $gr.xGr(2)$
\end_inset

) to equal the extraction.
 Again you can use one layer or many layers depending on what you want to
 show.
 Already with two layers you can simulate steady axially symmetric flow
 to a well in a semi-confined aquifer, according to De Glee which has as
 its analytical solution
\end_layout

\begin_layout Itemize
\begin_inset Formula 
\[
s=\frac{Q}{2\pi kD}K_{0}\left(\frac{r}{\lambda}\right),\,\,\,\lambda=\sqrt{kDc}
\]

\end_inset

And 
\begin_inset Formula $K_{0}\left(\xi\right)$
\end_inset

 is the Bessel function, which in Malab is 
\begin_inset Formula $besselk(0,\xi)$
\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
For the assignment implement an axially symmetric model with partially penetrati
ng well in a semi-confined aquifer.
 To do this, use more layers.
 The top one will represent the confining semi-pervious bed, the lower ones
 are layers within the aquifer, where the number of layers should be sufficient
 to obtain satisfying detail and accuracy to simulate the converging flow
 to the partially penetrating well screen.
 The task is to compare the result with that of the analytical solution
 of such a partially penetrating well, which his given in the syllabus in
 section 4.2.8 (p.47).
 The solution is that of the situation with a fully penetrating screen with
 the partially penetrating effect superimposed.
 This partially penetrating effect is given in the syllabus on page 47.
 Plot the heads contours of both the numerical and the analytical solution
 on top of each other in different colors, so you can see that they are
 the same.
 To compare make the model radius sufficiently large so that the right hand
 boundary of your numerical model does not influence the results, because
 otherwise the analytical solution won't be comparable with the numerical
 one.
 How large must be the model? Hint think in terms of 
\begin_inset Formula $\lambda$
\end_inset

, of course.
\end_layout

\begin_layout Itemize
Just realize that with this tool, you can simulate any pumping test multi-layer
 or not, partially-penetrating wells or not, semi-confined or not, heterogeneous
 or not.
 As soon as we have implemented transient flow this is true for any pumping
 test for which analytic solutions have ever been invented since Dupuit
 around 1880.
 Using our calibration (also dealt with in the course) we can automatically
 optimize the aquifer parameters as well, no other software needed.
\end_layout

\begin_layout Itemize

\series bold
Design an artificial recharge scheme as seen in the Amsterdam Water Supply
 Dunes.
 Do this first by Implementing a flat cross sectional model between a fully
 penetrating pond and a ditch with fixed heads in both.
 Compare the discharge this with the analytic solution.
 The criterion is the maximum head difference between pond and ditch of
 3 m, and an design travel time of 60 days.
 The conductivity is 
\begin_inset Formula $k=10m/d$
\end_inset

 and the porosity 
\begin_inset Formula $Peff=0.35$
\end_inset

.
 For you reference use the image cross section in file  '
\emph on
Section24H338-34.png
\emph default
' in the directory to obtain a value for ground elevation and depth of the
 aquifer.
 Once done, you may try to implement the effect of reduced aquifer thickness
 due to decline of the water table.
 Hint run the model in a loop, adapting its transmissivity to that of the
 elevation of the water table.
 The next step is to show the effect of the pond and drain not being fully
 penetrating.
 Hence the model should/may represent the area between the the pond to the
 heart of the drain to exploit symmetry.
 Make the pond 25 m wide (half pond 12.5 m) and use a water level of NAP
 +6.5 m.
 Pond depth of 1 m.
 You can use Google earth to estimate the distance actually applied between
 drain and pond in the dunes or use the value obtained by the simple model/analy
tic solution with fully penetrating ditch and drain as the distance between
 pond shore and drain.
 Use sufficient layers to obtain detail to show the curved stream lines
 near pond and drain.
 Contour the heads and the stream lines like it was done before.
 You may implement resistance of the bottom of the pond by reducing its
 conductivity.
 The same is true for the drain.
 Estimate how much water to extract from the drain when the average infiltration
 rate in the pond is 0.25 m/d.
 In the cross section in the mentioned image different layers are shown
 each having a different conductivity.
 Implement that as well and show the influence.
 Finally show the effect of the presence of a seepage lake on top of the
 drain, having a width of 30 m (half width of 15 ).
\end_layout

\begin_layout Standard

\series bold
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename DesignAR.png
	lyxscale 60
	width 80text%

\end_inset


\end_layout

\begin_layout Plain Layout

\series bold
\begin_inset Caption

\begin_layout Plain Layout
Basic artificial recharge scheme for design
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Artificial recharge with Pond.png
	width 80text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Actual AR scheme with pond and drain, but still simplified
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Artificial recharge with seepage Pond.png
	width 80text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Actual artificial recharge scheme with pond, drain and seepage pond formed
 above the drain
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Itemize
You may want to use particle tracking to show how and how fast the water
 flows trough the subsurface and illustrate its travel time.
 This can be done by using the function 
\emph on
Moc
\emph default
.
 Just type help 
\emph on
Moc
\emph default
 (Method Of Characteristics, i.e.
 particle tracking with retardation and decay) to see how it is supposed
 to work and what data has to be supplied.
 The theory and implementation is in the syllabus.
 You need a vector of times and a vector of 
\begin_inset Formula $x$
\end_inset

- and a vector of 
\begin_inset Formula $y$
\end_inset

-values as starting locations of particles.
 You can start all particles a a single location, multiple locations, random
 locations, or spread them out equally over the bottom of the pond.
 The latter could be done as follows
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

dL = 0.01;
\end_layout

\begin_layout Plain Layout

x = xPondLeft:dL:xPondRight;
\end_layout

\begin_layout Plain Layout

y = yPondBottom* ones(size(x));
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Instead of the fdm2 model, you may use the fdm2a model, which is provided.
 It is the more advanced version.
 It allows using specific boundary conditions known in MODFLOW jargon as
 
\begin_inset Quotes eld
\end_inset

General Head Boundaries
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Drains
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

River Boundaries
\begin_inset Quotes erd
\end_inset

 that are generally indicated by GHB, DRN and RIV in the MODFLOW manuals.
 These boundaries allow non-linear behavior of the model, for instance drains
 that run dry /switch off when the water sinks below their elevation and
 rivers that infiltrate through unsaturated zone when the head sinks below
 their bottom elevation.
 The theory is also in the syllabus.
 It further allows the thickness of the aquifer to be adapted automatically
 when the water table varies, which is another case of models to behave
 non-linearly.
 There are tow versions of the adaptation to the water table in fdm2a, one
 for the case when the model is flat/horizontal and one for the case it
 is vertical.
 In the first case the thickness of the aquifer is adapted.
 The thickness is know to the function from the grid2DObj, which may be
 called like this
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

gr = grid2DObj(xGr,yGr,Z)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $Z$
\end_inset

 is a 3D array specifying the top and the bottom of the aquifer respectively
 for all cells.
 If instead of a full 3D-array of size 
\begin_inset Formula $[gr.Ny,gr.Nx,2]$
\end_inset

 a vector of two numbers is used, then these to numbers a interpreted as
 the constant top and bottom of the aquifer.
 If 
\begin_inset Formula $Z$
\end_inset

 is omitted altogether, 
\begin_inset Formula $Z=[1$
\end_inset

, 0] is assumed, the default, implying a layer thickness of 
\begin_inset Formula $1$
\end_inset

.
 Hence this method is quite flexible as each cell may have its own top and
 bottom.
 It should be clear that if the Z is specified, then a we should also specify
 the conductivities instead of transmissivities.
 In the default situation, when the layer thickness is 1, transmissivities
 should be specified in a flat model and, of course conductivities in a
 vertical model if the vertical cross section is, indeed, supposed to be
 1 m thick.
 As always just realize what your are actually simulating.
\end_layout

\begin_layout Standard
To make the model actually adapt the thickness to the water table elevation,
 you have to tell it so.
 In MODFLOW this is done by setting the parameter 
\begin_inset Formula $LAYCON>0$
\end_inset

, where 
\emph on
LAYCON
\emph default
 tells modflow whether a model layer is convertible from confined to semi
 confined or not.
 We adopt the same method, by allowing an extra parameter with the 
\emph on
grid2DObj
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

gr= grid2DObj(xGr,yGr,Z,'LAYCON',true);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The default for 
\emph on
LAYCON
\emph default
 being false.
 You may leave true as was the case with 
\emph on
AXIAL
\emph default
.
 In the case 
\emph on
LAYCON
\emph default
 is set, fdm2a will see this and will compute the layer thickness as
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
H=Phi-gr.Z(:,:,end)
\]

\end_inset

and of, course, now has to loop a couple of times until this 
\begin_inset Formula $H$
\end_inset

 has become stable.
 See the code.
\end_layout

\begin_layout Standard
In the case the model is vertical, the layer does not play; in the vertical,
 it is the y-coordinate that represents layer thickness.
 In vertical cross sections, you generally don't specify the 
\begin_inset Formula $Z$
\end_inset

-array and thus use the default thickness of 1 m.
 Hence to signal fdm2a that we are dealing with a vertical cross sectional
 model, specify the 
\emph on
LAYCON2
\emph default
 parameter as an alternative to 
\emph on
LAYCON
\emph default
.
 
\emph on
LAYCON2
\emph default
 can be regarded 
\emph on
LAYON
\emph default
 for a 2D (vertical) cross section:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

gr = grid2DObj(xGr,yGr,'LAYCON2',true)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Again, the true argument is not necessary.
 In this case, 
\emph on
fdm2a
\emph default
 compare the head in each cell with the lowest 
\begin_inset Formula $y$
\end_inset

-value of the cell, which represents its bottom in a vertical cross section.
 In case the head is below the so-defined cell bottom, the cell is made
 inactive in the next loop.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
Inact=Phi\le gr.yGr(2:end)\times ones(1,gr.Nx)
\]

\end_inset


\end_layout

\begin_layout Standard
In a general way the layer thickness is adapted to the actual layer thickness,
 which is 
\begin_inset Formula $gr.dY$
\end_inset

 in the vertical cross section.
 To allow this when computing the conductances we act as follow
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
DY & = & gr.yGr(2:end)*ones(1,gr.Nx);\\
DY & = & min(gr.dY,max(0.001,gr.dY));
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
and then use 
\begin_inset Formula $DY$
\end_inset

 instead of 
\begin_inset Formula $gr.dY$
\end_inset

 to compute the conductances.
 The minimum value, here 0.001 m, is necessary to prevent Matlab from computing
 NaN values when dividing by zeros.
\end_layout

\begin_layout Standard
This method works well, but not when specifying for instance recharge to
 act into the top layer, because when cells are dry and made inactive, this
 recharge is simply ignored, while it should enter the topmost active layer,
 as it is implemented in MODFLOW.
 It is a nice and perhaps challenging exercise to implement this in 
\emph on
fdm2a
\emph default
 in an elegant fashion, one that always works.
\end_layout

\begin_layout Itemize
The challenge also to make it convenient is to implement the different models
 using the same code and to let each one be a scenario which you switch
 on using switch case sequence:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

scnenario = 1
\end_layout

\begin_layout Plain Layout

switch scnario
\end_layout

\begin_layout Plain Layout

  case 1, ....
\end_layout

\begin_layout Plain Layout

  case 1, ....
\end_layout

\begin_layout Plain Layout

  case 3, ....
\end_layout

\begin_layout Plain Layout

otherwise
\end_layout

\begin_layout Plain Layout

	error('unknown scenario')
\end_layout

\begin_layout Plain Layout

end
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
If your script works, document it by using blocks ('%% comments) and comments
 (% comments) and publishing the script, see under the file menu when in
 the editor.
 This yields a nice well document document that includes your documentation,
 the code and the results.
\end_layout

\begin_layout Itemize
Implement the real-world cross section in figure 
\emph on
crossSection24H338-341.png
\emph default
 and the data provided in the field visit report data.
\end_layout

\begin_layout Itemize
Calibrate the cross section using the measured head data and the drain discharge
 obtained from the total drain discharge on May 6, i.e.
 
\begin_inset Formula $\unit[4200]{m^{3}/d}$
\end_inset

 and the length of the drain, which is 445 m.
 Of course there are a lot of uncertainties but the parameters to calibrate
 are the conductivities of the layers in the figure and the resistance of
 the bottom of the pond.
 No seepage lake was on top of that drain at least near the cross section
 on May 6-8.
 We will discuss calibration in class as well as easy ways to convert the
 cross section into a model and compare the results with the measured values.
\end_layout

\begin_layout Itemize
Show how fast the water level declines, when the supply of recharge water
 stops.
 You can set a storage coefficient of 1 for the pond and of 0.2 for the aquifer.
 What will be the decaying hydro-graph of the drain? For this use the transient
 version 
\emph on
fdm2t
\emph default
.
\end_layout

\begin_layout Itemize
Given the cumulative travel time distribution obtained with Moc from the
 arrival of released particles, simulate what happens with the break-through
 of contamination peaks in the infiltration water when they are of different
 lengths of 1 day, 1 week, 1 month and what happens with the yearly quality
 and temperature fluctuation (retardation 
\begin_inset Formula $R=2$
\end_inset

 instead of 
\begin_inset Formula $R=1$
\end_inset

).
 The the fluctuation be between 2 and 25 and see it as a temperature.
 Compute this with convolution, for which the 
\begin_inset Formula $filter$
\end_inset

 and the 
\begin_inset Formula $conv$
\end_inset

 functions may be used.
\end_layout

\end_body
\end_document
